{"version":3,"file":"index-ba5b7330.esm.js","sources":["../../src/components/ExampleFetchComponent/ExampleFetchComponent.tsx","../../src/components/ExampleComponent/ExampleComponent.tsx"],"sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Table, TableColumn, Progress } from '@backstage/core-components';\nimport Alert from '@material-ui/lab/Alert';\nimport useAsync from 'react-use/lib/useAsync';\n\nconst useStyles = makeStyles({\n  avatar: {\n    height: 32,\n    width: 32,\n    borderRadius: '50%',\n  },\n});\n\ntype User = {\n  gender: string; // \"male\"\n  name: {\n    title: string; // \"Mr\",\n    first: string; // \"Duane\",\n    last: string; // \"Reed\"\n  };\n  location: object; // {street: {number: 5060, name: \"Hickory Creek Dr\"}, city: \"Albany\", state: \"New South Wales\",…}\n  email: string; // \"duane.reed@example.com\"\n  login: object; // {uuid: \"4b785022-9a23-4ab9-8a23-cb3fb43969a9\", username: \"blackdog796\", password: \"patch\",…}\n  dob: object; // {date: \"1983-06-22T12:30:23.016Z\", age: 37}\n  registered: object; // {date: \"2006-06-13T18:48:28.037Z\", age: 14}\n  phone: string; // \"07-2154-5651\"\n  cell: string; // \"0405-592-879\"\n  id: {\n    name: string; // \"TFN\",\n    value: string; // \"796260432\"\n  };\n  picture: { medium: string }; // {medium: \"https://randomuser.me/api/portraits/men/95.jpg\",…}\n  nat: string; // \"AU\"\n};\n\ntype DenseTableProps = {\n  users: User[];\n};\n\nexport const DenseTable = ({ users }: DenseTableProps) => {\n  const classes = useStyles();\n\n  const columns: TableColumn[] = [\n    { title: 'Avatar', field: 'avatar' },\n    { title: 'Name', field: 'name' },\n    { title: 'Email', field: 'email' },\n    { title: 'Nationality', field: 'nationality' },\n  ];\n\n  const data = users.map(user => {\n    return {\n      avatar: (\n        <img\n          src={user.picture.medium}\n          className={classes.avatar}\n          alt={user.name.first}\n        />\n      ),\n      name: `${user.name.first} ${user.name.last}`,\n      email: user.email,\n      nationality: user.nat,\n    };\n  });\n\n  return (\n    <Table\n      title=\"Example User List (fetching data from randomuser.me)\"\n      options={{ search: false, paging: false }}\n      columns={columns}\n      data={data}\n    />\n  );\n};\n\nexport const ExampleFetchComponent = () => {\n  const { value, loading, error } = useAsync(async (): Promise<User[]> => {\n    const response = await fetch('https://randomuser.me/api/?results=20');\n    const data = await response.json();\n    return data.results;\n  }, []);\n\n  if (loading) {\n    return <Progress />;\n  } else if (error) {\n    return <Alert severity=\"error\">{error.message}</Alert>;\n  }\n\n  return <DenseTable users={value || []} />;\n};\n","import React from 'react';\nimport { Typography, Grid } from '@material-ui/core';\nimport {\n  InfoCard,\n  Header,\n  Page,\n  Content,\n  ContentHeader,\n  HeaderLabel,\n  SupportButton,\n} from '@backstage/core-components';\nimport { ExampleFetchComponent } from '../ExampleFetchComponent';\n\nexport const ExampleComponent = () => (\n  <Page themeId=\"tool\">\n    <Header title=\"Welcome to pmtool!\" subtitle=\"Optional subtitle\">\n      <HeaderLabel label=\"Owner\" value=\"Team X\" />\n      <HeaderLabel label=\"Lifecycle\" value=\"Alpha\" />\n    </Header>\n    <Content>\n      <ContentHeader title=\"Plugin title\">\n        <SupportButton>A description of your plugin goes here.</SupportButton>\n      </ContentHeader>\n      <Grid container spacing={3} direction=\"column\">\n        <Grid item>\n          <InfoCard title=\"Information card\">\n            <Typography variant=\"body1\">\n              All content should be wrapped in a card like this.\n            </Typography>\n          </InfoCard>\n        </Grid>\n        <Grid item>\n          <ExampleFetchComponent />\n        </Grid>\n      </Grid>\n    </Content>\n  </Page>\n);\n"],"names":[],"mappings":"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"}